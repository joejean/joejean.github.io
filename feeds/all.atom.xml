<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Joe Jean</title><link href="https://www.joejean.net/" rel="alternate"></link><link href="https://www.joejean.net/feeds/all.atom.xml" rel="self"></link><id>https://www.joejean.net/</id><updated>2017-01-29T09:07:00+04:00</updated><entry><title>Automating The Deployment of a Codeigniter/PHP Website with Deployer</title><link href="https://www.joejean.net/articles/automating-the-deployment-of-a-codeigniter-php-website-with-deployer/" rel="alternate"></link><published>2017-01-29T09:07:00+04:00</published><updated>2017-01-29T09:07:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2017-01-29:articles/automating-the-deployment-of-a-codeigniter-php-website-with-deployer/</id><summary type="html">&lt;p&gt;About 4 months ago, I started using some of my free time to help build &lt;a href="http://labocine.com/"&gt;Labocine.com&lt;/a&gt;, an amazing new platform for science cinema.  The back-end is written using the PHP framework &lt;a href="https://www.codeigniter.com/"&gt;Codeigniter&lt;/a&gt;. Being at its early stage, the site was hosted on one of those traditional hosting providers. And the deployment of new features was done using the traditional ftp approach. After joining the project and as it grew, I decided to host it on a VPS and automate the deployment process. My goal for this post is to show you how you can easily automate the deployment of your Codeigniter web application, or any PHP web application for that matter.&lt;/p&gt;
&lt;p&gt;Before we can proceed, you need to make sure of two things. First, your project needs to be version controlled and available on a git hosting service such as Github, Bitbucket or Gitlab. Second, you need to have ssh access to the server where your application is (to be) hosted. &lt;/p&gt;
&lt;p&gt;The deployment tool we are going to use is called &lt;a href="https://deployer.org/"&gt;Deployer&lt;/a&gt;. Let's start by installing it in our Codeigniter project. I recommend using composer for the installation. Assuming you have composer installed on your computer, run the following command in the root of your project repository. 
&lt;pre&gt;&lt;code class="php"&gt;
    composer require-dev deployer/deployer
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;You should now have a &lt;code&gt;bin&lt;/code&gt; folder along with a &lt;code&gt;deployer&lt;/code&gt; folder inside the &lt;code&gt;vendor&lt;/code&gt; folder in your application root. &lt;/p&gt;
&lt;p&gt;Now, while still in the root of the project repository, let's create a file called &lt;code&gt;deploy.php&lt;/code&gt;. This file, called a &lt;code&gt;recipe&lt;/code&gt;,  will contain the custom deployment configurations that Deployer will be relying upon to deploy your application. Following is an example &lt;code&gt;deploy.php&lt;/code&gt;. &lt;/p&gt;
&lt;pre&gt;&lt;code class="php7"&gt;
require 'recipe/codeigniter.php';
set('default_stage', 'live');
server('SERVER_NAME', 'SERVER_IP_ADDRESS')
    -&gt;identityFile()
    -&gt;user('YOUR_USERNAME_ON_SERVER')
    -&gt;stage('live')
    -&gt;env('deploy_path', '/var/www/html/app');
 set('repository', '-b branch-name git@github.com:test/SAMPLEREPO.git');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let's go over the content of &lt;code&gt;deploy.php&lt;/code&gt;. Since we are going to deploy a Codeigniter application , our &lt;code&gt;deploy.php&lt;/code&gt; recipe needs to extend the Codeigniter recipe, and this is what we do in the second line. If you are using another framework, you can find the list of all the supported recipes &lt;a href="https://github.com/deployphp/deployer/tree/master/recipe"&gt;here&lt;/a&gt;. 
On the 3rd line, we set the default stage. The stage is more like an environment and in our case we set it to &lt;code&gt;live&lt;/code&gt;. So, your stage could be development, staging etc. Next, we configure our server where our code will be deployed. We give the server a name, any name we want, and we provide its IP address. In the following line, we use &lt;code&gt;identityFile()&lt;/code&gt; to tell Deployer that we want to connect to our server using ssh and the ssh keys are located in our &lt;code&gt;.ssh&lt;/code&gt; folder. If your keys are located somewhere else or if they were created with a password you can still pass the the full path to your keys as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class="php"&gt;
identityFile("~/path_to_ssh_folder/id_rsa.pub","~/path_to_ssh_folder/id_rsa", "pass phrase");
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also configure Deployer to log into your server using a username and password, please see &lt;a href="https://deployer.org/docs/servers"&gt;the documentation&lt;/a&gt; for an example on how to do that. In the next 3 lines we pass it the username with which to ssh into our server, we tie this server to a stage which is the default stage in this case, and we provide the path where our application should be deployed. The last thing we need to do is to  specify the git repository which contains the code to be deployed. It is important to note that in this example we are using one server, but you can configure however many servers you want in your &lt;code&gt;deploy.php&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now we are ready to deploy our app. In order to do so we just need to type, while in the root of our project,
&lt;pre&gt;&lt;code&gt;php vendor/bin/dep deploy live&lt;/code&gt;&lt;/pre&gt; or 
&lt;pre&gt;&lt;code&gt;php vendor/bin/dep deploy SERVER_NAME&lt;/code&gt;&lt;/pre&gt; Since we set the default stage to &lt;code&gt;live&lt;/code&gt;, we can also just do &lt;code&gt;php vendor/bin/dep deploy&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;After deploying, if something breaks, rolling back to the previous working version of your site is as easy as &lt;pre&gt;&lt;code&gt;php vendor/bin/dep rollback live &lt;/code&gt;&lt;/pre&gt; &lt;/p&gt;
&lt;p&gt;Imagine you create a new branch, work on it, commit and push your changes. In order to deploy those changes, you need to manually go into the &lt;code&gt;deploy.php&lt;/code&gt; file and change the branch name in the last line: &lt;pre&gt;&lt;code&gt;set('repository', '-b branch-name git@github.com:test/SAMPLEREPO.git');&lt;/code&gt;&lt;/pre&gt;This is a bit tedious, isn't it? Instead, we can just create a pre-commit hook that will go and make that change for us every time we commit. Here is what my &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt; looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code class="bash"&gt;
branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
sed -i '$ d' deploy.php
echo "set('repository', '-b $branch git@github.com:test/SAMPLEREPO.git');"&gt;&gt; deploy.php
git add deploy.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With something like that in place, I do not need to manually edit the &lt;code&gt;deploy.php&lt;/code&gt;  every time I want to deploy a new branch. After a &lt;code&gt;git push&lt;/code&gt; I can do a &lt;code&gt;dep deploy&lt;/code&gt; and be sure that my latest changes on my new branch will get deployed. &lt;/p&gt;
&lt;p&gt;If you use Deployer in some other interesting ways, or if you use other tools for your deployment, please feel free to leave a comment below. &lt;/p&gt;</summary><category term="php"></category><category term="codeigniter"></category><category term="programming"></category></entry><entry><title>My First Two Weeks At Namshi</title><link href="https://www.joejean.net/articles/my-first-two-weeks-at-namshi/" rel="alternate"></link><published>2016-07-28T11:38:00+04:00</published><updated>2016-07-28T11:38:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2016-07-28:articles/my-first-two-weeks-at-namshi/</id><summary type="html">&lt;p&gt;On July 10th, I joined &lt;a href="https://namshi.com/"&gt;Namshi&lt;/a&gt; as a Junior Software Engineer. I was really excited to start my first full time job writing software. Though, I have to confess that I was also a bit afraid and nervous. Fortunately, after just two days working with the team the fear and nervousness went away. In this post, I will share with you some of the things I have learned so far as well as what I love about working in this awesome team.&lt;/p&gt;
&lt;h3&gt;Everyone is super nice&lt;/h3&gt;
&lt;p&gt;From the first day I joined the team, everyone has been going out of their way to help me and make me feel welcome. In order to better understand the business as a whole, HR arranged for me to meet people from many other teams such as warehouse, business intelligence, and project management. All of those people were really nice and did a great job explaining to me how their department works. 
In the tech team, I have interrupted some of my colleagues countless times to ask questions and they have always done their best to give me answers or point me to someone else who knows the answer. The VP of technology, Alex, who is also my manager has urged me to not be afraid to ask questions and discuss things with our senior engineers. In my opinion, this ability to ask questions without feeling like you are being annoying to your peers is crucial for a smooth integration of a new member, especially a junior like me, onto a team.&lt;/p&gt;
&lt;h3&gt;Code quality is taken seriously&lt;/h3&gt;
&lt;p&gt;On my second day, I was assigned my first task. It consisted in building a tool that could read a csv file containing a list of products and download the the image for each product from a website. This tool was for the PR department and it would reduce the amount of time it usually takes them to send new products images out to the press. Since the end users only have windows machines, the final product was supposed to be a windows executable. Because of that requirement, Alex suggested that we use the Go programming language; a language I hadn't used before. Ayham, one of the senior engineers on the team who was also new to Go buddied up with me to work on the project. 
We started by brainstorming ideas and drawing a workflow diagram. Then, we moved to the coding part which was really fun. We managed to get something working by the next day. At one point, after making a few improvements to the code, I looked at it and thought to myself “ok, this looks great, we are done here”. But to Alex and Ayham, there was a lot of rooms for improvement. Therefore, the code went through multiple rounds of review. Each round, we were trying to make it better and better. I remember Ayham always asking "can we do this in a better way?" This experience taught me that even though code will never be perfect, it is still possible to attain good quality code if we care enough.  &lt;/p&gt;
&lt;h3&gt;Learning happens everyday&lt;/h3&gt;
&lt;p&gt;Everyday, for the past two weeks, I was able to learn something new. I have learned about proper debugging techniques, Golang, how to be more productive by using keyboard shortcuts and how to break down the solution to a problem into steps before diving into coding etc... Not a day has passed without learning something new either from my manager--who is by the way an excellent teacher-- or from my other colleagues. &lt;/p&gt;
&lt;h3&gt;Work-life balance is encouraged&lt;/h3&gt;
&lt;p&gt;We work from 9:00 am to 6:00 pm including one hour for lunch break. I often hear people say at one does not leave the office before one’s boss. But here at Namshi, that is not the case. After 6 pm anyone is allowed to go home even though our manager is still around. In fact, I have noticed that if our manager wants to discuss something with a team member after 6pm, he will always asks something along the lines of “do you have 5 minutes or are you leaving now?”. And to top it all off, on Thursdays (the last day of the week in the UAE) everyone is allowed to leave the office by 3 pm to go and start enjoying their weekend. &lt;/p&gt;
&lt;h3&gt;I have one of the best managers in the world&lt;/h3&gt;
&lt;p&gt;My manager, Alex, is really awesome! I’m sharing this because apparently &lt;a href="https://hbr.org/2014/03/why-good-managers-are-so-rare/"&gt;great managers are rare&lt;/a&gt;. The first time I interacted with him was during my first interview. I was really impressed by how he took the time to explain to me the answers to a few questions I could not answer. Then after joining, I have seen him teach, discuss ideas with, and help members  of the team --especially myself-- on a daily basis. 
For the past two weeks, at the end of each work day, we spend about 5 minutes talking about how my day went,  asking me for feedback for the team and giving me constructive feedback for myself. In addition to that he checks on me throughout the day to get updates on my progress in whatever task I’m working on.&lt;/p&gt;
&lt;p&gt;All in all, I feel really blessed to be part of this team of talented and friendly people. I’m really excited for the long and fun road ahead. &lt;/p&gt;
&lt;p&gt;If this blog post got you excited  about the prospect of joining our team, please do send in an application as we are currently hiring :) &lt;/p&gt;</summary><category term="programming"></category><category term="namshi"></category><category term="job"></category></entry><entry><title>Speed and Usability Performance of Top UAE Websites.</title><link href="https://www.joejean.net/articles/speed-and-usability-performance-of-top-uae-websites/" rel="alternate"></link><published>2016-06-07T09:07:00+04:00</published><updated>2016-06-07T09:07:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2016-06-07:articles/speed-and-usability-performance-of-top-uae-websites/</id><summary type="html">&lt;p&gt;Google recently pusblished a new version of their &lt;a href="https://developers.google.com/speed/docs/insights/v2/getting-started"&gt;PageSpeed API&lt;/a&gt;. I wanted to play around with it a bit. So, I decided to build a page that displays a visualization of the speed of some of the most popular UAE websites. &lt;/p&gt;
&lt;p&gt;I went to &lt;a href="http://www.alexa.com/topsites/countries/AE"&gt;Alexa&lt;/a&gt; in order to gather the data about the most popular websites in the UAE. I also added a few sites that were not on Alexa's list. I used Google charts for the visualization. The code is on my &lt;a href="https://github.com/joejean/Top-Website-Performance-Visualization"&gt;Github&lt;/a&gt;. I plan to continue improving it. Your feedback and ideas are welcomed. &lt;/p&gt;
&lt;h2&gt;Visualization&lt;/h2&gt;
&lt;p&gt;You can access the page with the live and interactice visualization &lt;a href="https://www.joejean.net/files/general/uae_websites_speed_visualization.html"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="programming"></category><category term="uae"></category><category term="visualization"></category></entry><entry><title>Learning new tools by implementing the same project using different languages/frameworks.</title><link href="https://www.joejean.net/articles/learning-new-tools/" rel="alternate"></link><published>2016-03-30T09:40:00+04:00</published><updated>2016-03-30T09:40:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2016-03-30:articles/learning-new-tools/</id><summary type="html">&lt;p&gt;I’m always looking for ways to improve my technical skills. And one thing that I hear a lot as advice to software developers is to keep trying new tools and frameworks. So, I have decided to try a couple of languages/frameworks that I either have never used before or have little experience with. The best way for me to do that is by building the same application using those different languages/frameworks. &lt;/p&gt;
&lt;p&gt;So far, I have selected the following tools:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;C/kore.io&lt;/li&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;li&gt;Racket&lt;/li&gt;
&lt;li&gt;PHP/Laravel&lt;/li&gt;
&lt;li&gt;Java/Spring&lt;/li&gt;
&lt;li&gt;Ruby/Rails&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The project will be a web application displaying beautiful pictures of Haiti. It will be a place for people to share and view beautiful pictures of beautiful places in Haiti. As this is a toy project, I’m intentionally keeping it simple feature wise. Users will be able to login with Facebook and upload pictures. Once uploaded the picture will be available for viewing by anyone including non-authenticated users. The uploader can add multiple tags to a picture. Users will also be able to like, dislike a picture; to do that they will need to be logged in as well.  &lt;/p&gt;
&lt;p&gt;In order to be able to focus entirely on the language/framework that I’m trying to learn via the backend implementation, I’m currently building a frontend template using Knockout.js and Bootstrap 4. Then, I will just use that template in all of the versions of the project regardless of the technology that I will be using for the backend. Once the frontend is built, I will just need to focus on the backend work which is where I will get to really learn the new technology.&lt;/p&gt;
&lt;p&gt;Since I'm currently busy working on my Capstone Project, I haven't given myself any specific timeline to complete this. Istead I have decided to commit at least 30 minutes a day to this project. As John Resig has mentioned &lt;a href="http://ejohn.org/blog/write-code-every-day/"&gt;here&lt;/a&gt;, working on a side project everyday even for just an hour is better than working on it over weekends for long hours.&lt;/p&gt;
&lt;p&gt;I’m very excited about this new journey and I hope to learn a lot. I will do my best to keep you updated on the overall experience all the cool stuff that I will be learning. &lt;/p&gt;</summary><category term="programming"></category></entry><entry><title>A small experiment on Stack Exchange Expatriate</title><link href="https://www.joejean.net/articles/experiment-on-stack-exchange-expatriate/" rel="alternate"></link><published>2015-11-09T06:24:00+04:00</published><updated>2015-11-09T06:24:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-11-09:articles/experiment-on-stack-exchange-expatriate/</id><summary type="html">&lt;p&gt;As a programmer I use Stack Overflow a lot. But last week one of my professors asked us to pick one of the Stack Exchange websites that we have never used before and experiment with it by using some of its features. This article is an analysis of my experience with Stack Exchange Expatriates. &lt;/p&gt;
&lt;p&gt;Why did I pick Stack Exchange Expatriates? Well, I wanted to pick something non technical as I already have a lot of experiences with technical forums such as &lt;a href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;, &lt;a href="https://news.ycombinator.com/"&gt;Hacker News&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/cscareerquestions"&gt;SubReddit cscareerquestions&lt;/a&gt; etc.&lt;/p&gt;
&lt;p&gt;After signing up for Stack Exchange Expatriates and as I was going through the questions I saw a rather simple question which nobody had answered yet. The question which you can see in the screen shot below looked somewhat simple to me. Simple in the sense that a Google search would have revealed the answer. So I decided to try to answer it. &lt;/p&gt;
&lt;p&gt;&lt;img src ="https://www.joejean.net/images/stackexchange.png" class="img-responsive img-rounded" /&gt;&lt;/p&gt;
&lt;p&gt;I naturally went ahead and tried two or three Google queries until I stumbled upon an &lt;a href="http://www.h1bwiki.com/h-1b-amendment-requirements/"&gt;article&lt;/a&gt;, on a website specialized in H1B information, that has the answer to the question. At this point I paused for a while to think about the credibility of the source of the information. I did that because according to my experience, there is a lot of false information on the WEB especially when it comes to those specialized topics. Among other things, I checked the comments at the bottom of the article and most commenters except one seemed to validate the correctness of the information provided in the article. But can those users also be trusted? I had no answer to that. &lt;/p&gt;
&lt;p&gt;After investigating I decided that I could trust the content of the article with a confidence level of about 70%. Therefore, I went back to the Stack Exchange Expatriates and answer the question by quoting the article and putting a link to it as well. Referencing one's source when replying to a question on Stack Exchange is highly encouraged in their guidelines. To me, by referencing the original source, I was not only following proper standards but I was also passing on the responsibility of verifying the correctness of the information to the original poster. &lt;/p&gt;
&lt;p&gt;After answering the question I couldn't help but wonder why didn't the original poster do the same thing I did to find the answer. Maybe he did but he did not use the right queries hence why he did not get the answer. Or maybe he did not even bother to do a Google search first knowing that a Stack Exchange user who wants more points would be happy to do the research and give him a solution. &lt;/p&gt;
&lt;p&gt;Speaking of points, so far I have only received one vote for my answer and the original poster asked some follow-up questions and another user had answered before I could get my hands on them. I have no idea why the original poster did not mark my answer as the accepted one, which would have resulted in more points for me. But why do I care about earning more points?&lt;/p&gt;
&lt;p&gt;Well, points seem to be a very important part of the experience a user can have on a Stack Exchange site. The number of points you have can determine whether you have access to certain features of the site or not. For example, I saw a question with an already accepted answer and tried to up-vote but I get a message saying that I need 50 more points for my vote to count. I'm assuming that the people who designed Stack Exchange have a good rationale to support such restrictions. Since I don't know what their rationales are I'm not going to criticize the feature. &lt;/p&gt;
&lt;p&gt;Another thing that this experience got me to think about is how much redundancy of information there is on the web. The same information is repeated in different places on the web. I know that storage is becoming cheaper and cheaper but I wonder whether the such redundancy has any other cost that we haven't discovered. &lt;/p&gt;</summary><category term="tech"></category><category term="communication"></category></entry><entry><title>Moving My Personal Website from Heroku to Github Pages</title><link href="https://www.joejean.net/articles/deploying-my-personal-website-to-github-pages/" rel="alternate"></link><published>2015-11-08T09:07:00+04:00</published><updated>2015-11-08T09:07:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-11-08:articles/deploying-my-personal-website-to-github-pages/</id><summary type="html">&lt;p&gt;When I first built my personal website I deployed it to Heroku. At that time Heroku was the best option for me because it offered a free tier and it was relatively easy to use. But one thing I did not like about it was that the application dyno&amp;mdash;the container that handles all the HTTP traffic to the site&amp;mdash; would go to sleep if my website receives no traffic in a 30-minute period. Consequently the next time someone tries to access the site it will take longer to load as the dyno will need to wake up first. &lt;/p&gt;
&lt;p&gt;The site is built with &lt;a href="http://docs.getpelican.com/en/3.6.3/"&gt;Pelican&lt;/a&gt; which is a static site generator written in Python. A static site generator basically takes text written in a plain text markup format such as Markdown and converts it to HTML pages using predefined templates. So, after defining the templates for my website, whenever I need to publish new content such as this article I only need to write raw text in a MarkDown file and Pelican will handle the rest for me. Among other advantages, this approach is easy to use and results in a really fast website that can be easily deployed to GitHub Pages. &lt;/p&gt;
&lt;p&gt;This weekend I decided to move my website from Heroku to GitHub Pages. Here is how I went about it.&lt;/p&gt;
&lt;h2&gt;Deploying the site to GitHub Pages&lt;/h2&gt;
&lt;p&gt;In order to publish a Pelican site to GitHub as a User Page, one needs to push the content of the output direrctory generated by Pelican to the master branch of their &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; repository on GitHub.&lt;/p&gt;
&lt;p&gt;First, I created a new repository named &lt;a href="https://github.com/joejean/joejean.github.io"&gt;&lt;code&gt;joejean.github.io&lt;/code&gt;&lt;/a&gt; on GitHub. Note that this repository name must have the form &lt;code&gt;&amp;lt;github username&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Secondly, I installed the Python package &lt;code&gt;ghp-import&lt;/code&gt; and issued the command &lt;code&gt;ghp-import output&lt;/code&gt;. This command updates the local gh-pages branch with the content of the output directory (creating the branch if it doesn’t already exist).&lt;/p&gt;
&lt;p&gt;And third, I issued the command &lt;code&gt;git push git@github.com:joejean/joejean.github.io.git gh-pages:master&lt;/code&gt; to push the content of the gh-pages branch to the master branch of the github repo where the site will live. After this the site was live and it could be accessed from http://joejean/github.io but I wanted to use my custom domain name "www.joejean.net".&lt;/p&gt;
&lt;h2&gt;Setting up the custom domain&lt;/h2&gt;
&lt;p&gt;I tried many different approaches while setting up the custom domain, but what follows is the only approach that worked for me. 
I started by creating a &lt;a href="https://github.com/joejean/joejean.github.io/blob/cname/CNAME"&gt;CNAME file&lt;/a&gt; with the content &lt;code&gt;www.joejean.net&lt;/code&gt; and commit it to a different branch&amp;mdash;which can have any name&amp;mdash; in the same &lt;code&gt;joejean.github.io&lt;/code&gt; repository. Then I merged that branch with the master branch of the &lt;code&gt;joejean.github.io&lt;/code&gt; repository. &lt;/p&gt;
&lt;p&gt;Then I opened the domain administration page at my domain name registrar and I created two A records which points respectivley to the GitHub IPs &lt;code&gt;192.30.252.153&lt;/code&gt; and &lt;code&gt;192.30.252.154&lt;/code&gt;. After that, the last step was to create a CNAME record for the subdomain &lt;code&gt;www.joejean.net&lt;/code&gt; that points to &lt;code&gt;joejean.github.io&lt;/code&gt;. The following screenshot summarizes the configurations:
&lt;img src ="https://www.joejean.net/images/dns.png" class="img-responsive img-rounded" /&gt;&lt;/p&gt;
&lt;p&gt;So now my site is being served from GitHub pages and loads with the same lightning speed no matter when it is accessed. It is important to note that GitHub Pages only work for static sites. &lt;/p&gt;</summary><category term="python"></category><category term="pelican"></category><category term="githubpages"></category></entry><entry><title>Describing some aspect of life in my hometown with three emojis</title><link href="https://www.joejean.net/articles/emojis-for-cap-haitien/" rel="alternate"></link><published>2015-09-28T06:24:00+04:00</published><updated>2015-09-28T06:24:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-09-28:articles/emojis-for-cap-haitien/</id><summary type="html">&lt;p&gt;I was tasked to make three conceptual emojis that describe or represent an aspect of life in your hometown. In this post I talk about the approach I followed to come up with the design. &lt;/p&gt;
&lt;p&gt;Firstly, I'm from Cap-Haitien which is the second city in Haiti. I was born and raised there, so I know a lot about the city. &lt;/p&gt;
&lt;p&gt;In order to come up with the initial emoji designs, I had to think about three things that are part of the traditions and culture of my hometown. More than three things came to mind. Therefore, I had to select three of them: the attachment and pride that is cultivated by the native of this city -- in French we call it 'La Fierte Christophienne', our love for pumpkin soup, and our most popular greeting. &lt;/p&gt;
&lt;p&gt;After selecting the topics I wanted the emojis to represent, I needed to come up with an actual design for each of those topics. For that I used an android app called "Emojidom Maker". It is a simple and easy to use app that lets one create some cool emojis. For someone who is not that skilled in using sophisticated design like me, the app was a  lifesaver.  After some tweaking and playing around with the app, I came up with the following designs to represent respectively the concept of attachment and pride cutivated by the native of Cap-Haitien, our love for pumpkin soup, and our most popular greeting. &lt;/p&gt;
&lt;p&gt;&lt;img src="http://dl.dropboxusercontent.com/s/i1zj7ehv1zwb0zz/okap.png?dl=0"&gt;
&lt;img src="http://dl.dropboxusercontent.com/s/1ck4pmc7l1vms4r/joumou.png?dl=0"&gt;
&lt;img src="http://dl.dropboxusercontent.com/s/nqz3rewpjewcvha/sakpase.png?dl=0"&gt;&lt;/p&gt;
&lt;p&gt;I then shared those designs with my brother and two of my friends--who are currently living there-- and asked them for feedback. My friends said they love them and one of them especially really like the pumpkin emoji. On the other hand my brother suggested that I remove the little read hearts from it. He also said the greeting emoji would be nicer with some additional color. And there was no criticism on the first emoji. &lt;/p&gt;
&lt;p&gt;So I went back to Emojidom Maker and I made some changes to address the feedback I received on the first versions. I only made changes to the last two emojis. I removed the little hearts from the pumpkin emoji and I also added a little bit of color to the greeting emoji. The final versions are shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://dl.dropboxusercontent.com/s/i1zj7ehv1zwb0zz/okap.png?dl=0"&gt;
&lt;img src="http://dl.dropboxusercontent.com/s/v5e33arwzm2q4ib/joumou_2.png?dl=0"&gt;
&lt;img src="http://dl.dropboxusercontent.com/s/o5w6oczrgo8wgqh/sakpase_2.png?dl=0"&gt;&lt;/p&gt;
&lt;p&gt;I also sent those designs to three other friends of which only one of them said he did not like the pumpkin emoji because he personally does not like pumpkin soup anyways. The two other friends loved them. And they asked me if there was a way they could install them on their phone in order to use them. &lt;/p&gt;
&lt;p&gt;I guess, that's gonna be the third step in this project.  &lt;/p&gt;</summary><category term="tech"></category><category term="communication"></category></entry><entry><title>I had a 12-hour technology detox, here is how it went</title><link href="https://www.joejean.net/articles/12-hour-technology-detox/" rel="alternate"></link><published>2015-09-15T06:24:00+04:00</published><updated>2015-09-15T06:24:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-09-15:articles/12-hour-technology-detox/</id><summary type="html">&lt;p&gt;On September 13th 2015, from 12:00pm to 12:00am I was on a technology detox , i.e. I was not allowed to use any electronic communication devices. The following is an account of how I spent those twelve hours. &lt;/p&gt;
&lt;p&gt;Before starting my 12-hour technology detox, I had to warn my friends and family about it. I felt the need to do so because I usually reply quickly to emails and instant messages except when I'm traveling. And I did not want anyone to start panicking when, suddenly, I become unreachable for 12 straight hours. &lt;/p&gt;
&lt;p&gt;I also selected a couple of things to read. One of them is a book by Viktor Frankl called "Man's search for meaning". In addition to that I printed out the articles "A template engine" and "Git from the bottom Up"
. I figured if I'm not gonna have access to my technology devices for 12 hours I'd better have an alternative. And reading physical copies of books and articles was one of those alternatives.&lt;/p&gt;
&lt;p&gt;With this preparation out of the way, I was ready to start the journey. At 11:55am I turned off my laptop and my phone and stored them away. At 12:00pm I headed to the dining hall where I was supposed to eat lunch with a friend a little later. &lt;/p&gt;
&lt;p&gt;While waiting in the dining hall, since I did not have my phone to play with, I started reading Viktor's book. A couple of pages into the book, I read "A man could get used to anything". I then paused and thought "man, I have so gotten used to being always connected through my devices. Would it be possible to get used to living without this constant connection to information?". Then I went back to my reading. &lt;/p&gt;
&lt;p&gt;At around 12:45pm, my friend showed up (by the way, I could still tell the exact timing of things because I was wearing a nice analog watch). We grabbed food, started eating and then 'bam', he received a notification on his phone. He naturally pulled his phone, checked the message and placed it back on the table. During the short time this was happening, the urge to also check my phone too suddenly came to me. I was thinking that I may have a new email or a new WhatsApp message from one of my friends. But I couldn't do it because my phone was away :). This made me aware of the fact that  usually I would be constantly checking my phone while eating with a group of friends. &lt;/p&gt;
&lt;p&gt;After eating lunch, I continued reading the book. Then I went back to my room to take a nap. &lt;/p&gt;
&lt;p&gt;I woke up at 3:10pm and started documenting the experience. Well, this is the first time in in about four years that I have to write that much on paper. One thing I notice is that even though I'm using a pencil I tend to erase less than I would hit backspace when I'm typing on on my computer. And I think that's a great thing. &lt;/p&gt;
&lt;p&gt;At 6:45, I got back to my room after eating dinner. Before going to dinner, I had been quiet productive. I did the reading for my statistics class and I talked and interacted with people way more than I would if I had access to my phone and my computer. But every once in a while the urge to check my email or Hacker News or Reddit would come to me and then disappear after a few minutes. Sometimes I would unconsciously put my hands in my pocket trying to pull my phone out thinking that it is there as usual.&lt;/p&gt;
&lt;p&gt;Between 6:45 and midnight, I did some more reading, went for a walk, started my homework and engaged in some interesting conversations with other students. &lt;/p&gt;
&lt;p&gt;Then at midnight, I turned on my phone and my computer. I checked my email and found out that I had missed a 3-hour on-campus work assignment. This happened because I did not have my phone with me to remind me of it. Fortunately my supervisor was really understanding so I did not get a blame letter or something. And I think this revealed how dependent my everyday life is on technology. I thought about how I would not have missed my work assignment if I had a printed version of my calendar on my wall.&lt;/p&gt;</summary><category term="tech"></category><category term="communication"></category></entry><entry><title>On communication and technology</title><link href="https://www.joejean.net/articles/on-communication-and-technology/" rel="alternate"></link><published>2015-09-08T09:07:00+04:00</published><updated>2015-09-08T09:07:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-09-08:articles/on-communication-and-technology/</id><summary type="html">&lt;p&gt;As human beings we have a natural need to communicate with one another. In order to do so, we use different tools. Such tools include language, gestures, drums, computers,
 cellphones etc...
To me all those tools that facilitate communication among humans are technologies. In a more general sense, a technology is anything that improves the life of humans. &lt;/p&gt;
&lt;p&gt;In the first chapter of the book &lt;em&gt;"The Information"&lt;/em&gt; by James Gleick we see how the same technology can be used differently in different cultures. The author tells how the drum is used in sub-Saharan Africa as a tool to share information --many sentences-- over a long distance. But this was a big surprise to Europeans who were living in sub-Saharan Africa at the time. In their culture the best they could do with the drum was transferring a set of one-word long messages such as &lt;em&gt;attack, retreat...&lt;/em&gt;. This anecdote reminds me of how versatile a technological tool can be. How a certain technology is used is up to the creativity and imagination of whoever is using it. This makes me wonder, do we, as humans, always use technology in way that makes us better? &lt;/p&gt;
&lt;p&gt;Well, in &lt;em&gt;"The Machine Stops"&lt;/em&gt; by Edward M. Forster, we see how human beings became too dependent on technology. Face to face interactions are almost non-existent and the humans use technology for everything in our life. It is like they are living in a virtual world. People have friends they have never met in person. I personally sometimes would send a Facebook message to my roommate who is just sitting in the living room while I'm laying in bed in the bedroom. While some might consider this an efficient way of communicating, I do think that, as human beings, we definitely need more direct and physical interactions. Sometimes it definitely makes sense and is more   convenient and efficient to use technology to communicate. For example, it is so convenient for two people who are located thousands of miles apart from each other to communicate via email or Skype etc&lt;/p&gt;
&lt;p&gt;All in all, I think human beings need to strive to find the right balance between using technology to communicate and having real interactions. It is so easy to always resort to technology whenever we need to communicate with someone else, but if we pause a second and ask ourselves “can this be done in person” we realize that technology is not always needed for us to communicate.&lt;/p&gt;</summary><category term="tech"></category><category term="communication"></category></entry><entry><title>Is your Python loop followed by an else clause? If yes, read on</title><link href="https://www.joejean.net/articles/else-clause-in-python-loop/" rel="alternate"></link><published>2015-08-01T11:38:00+04:00</published><updated>2015-08-01T11:38:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-08-01:articles/else-clause-in-python-loop/</id><summary type="html">&lt;p&gt;Today I decided to start my day by reading about &lt;a href="http://docs.quantifiedcode.com/python-code-patterns/"&gt;common anti-patterns in Python&lt;/a&gt; and how to fix them. An anti-pattern in the context of programming is a piece of code that solves a problem but that has the potential of having unintended bad consequences.&lt;/p&gt;
&lt;p&gt;One of those anti-patterns is the use of an else clause right after a loop without a break statement. As the article explains, the else clause following a loop is only executed when the loop sequence becomes empty. That means if the loop does not specify a break statement the else clause will always execute because eventually the loop sequence will become empty. They provided the following example code to illustrate the point:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
def contains_magic_number(list, magic_number):
    for i in list:
        if i == magic_number:
            print "This list contains the magic number."
    else:
        print "This list does NOT contain the magic number."

contains_magic_number(range(10), 5)
# This list contains the magic number.
# This list does NOT contain the magic number.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the snippet of code above we see that because no &lt;code&gt;break&lt;/code&gt; statement was specified inside the &lt;code&gt;if&lt;/code&gt; block, the &lt;code&gt;else&lt;/code&gt; clause ends up being executed; which is obviously not the intended behaviour in this case. This can be fixed by adding a &lt;code&gt;break&lt;/code&gt; statement in the &lt;code&gt;if&lt;/code&gt; block as shown below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
def contains_magic_number(list, magic_number):
for i in list:
    if i == magic_number:
        print "This list contains the magic number."
else:
    print "This list does NOT contain the magic number."

contains_magic_number(range(10), 5)
# This list contains the magic number.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here because of the &lt;code&gt;break&lt;/code&gt; statement the loop will print the message and exit if the magic number is found in the list, resulting in the &lt;code&gt;else&lt;/code&gt; clause not being executed. So I think this is all great.&lt;/p&gt;
&lt;p&gt;But I was looking at the code and thinking that one could take this one step further by removing the &lt;code&gt;else&lt;/code&gt; clause and making the &lt;code&gt;contains_magic_number()&lt;/code&gt; function return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; depending on whether the magic number is found in the list or not. So the code for this alternative solution would look as follow:&lt;/p&gt;
&lt;pre&gt;
    &lt;code&gt;
def contains_magic_number(list, magic_number):
    for i in list:
        if i == magic_number:
            return True
    return False

if contains_magic_number(range(10), 5):
    print "This list contains the magic number."
else:
    print "This list does NOT contain the magic number."

#This list contains the magic number
    &lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;What I like about this soulution is not only that it does not contain an &lt;code&gt;else&lt;/code&gt;clause but also the new &lt;code&gt;contains_magic_number()&lt;/code&gt;function is more reusable. Now we can easily use that function in parts of our code where we only need to check if the list contains the magic number and do something else other than printing a message on the screen. &lt;/p&gt;</summary><category term="programming"></category><category term="python"></category></entry><entry><title>My First Week At the Recurse Center</title><link href="https://www.joejean.net/articles/first-week-at-recurse-center/" rel="alternate"></link><published>2015-05-31T11:38:00+04:00</published><updated>2015-05-31T11:38:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-05-31:articles/first-week-at-recurse-center/</id><summary type="html">&lt;p&gt;This summer I'm lucky to be attending the &lt;a href="http://www.recurse.com"&gt;Recurse Center (RC)&lt;/a&gt;. RC is a 12-week long self-directed retreat for programmers. It is a place one goes to become a better programmer by working on programming projects of one's interest. &lt;/p&gt;
&lt;p&gt;We started the first day, Monday the 26th of May, with some welcome talks by the RC founders, facilitators and employees. The Recursers from the first batch also gave us some really good advices. Then we proceeded with checkin for the day. During checkins we split into smaller groups and each person talks a little bit about what they did the previous day and what they are planning to do during the current day. Personally, checkins really help me stay on track.&lt;/p&gt;
&lt;p&gt;After checkin, I started working through the Nand to Tetris course materials where one learns how to build a computer from scratch. After a couple of hours, I lost interest and tried the &lt;a href="http://www.buildyourownlisp.com"&gt;build your own lisp course&lt;/a&gt; which is a course that teaches one how to build a Lisp with C. So far, I'm enjoying it while learning a lot about C and building a programming language. &lt;/p&gt;
&lt;p&gt;I tried not to do only one thing per day, so I ended up developing a &lt;a href="https://github.com/joejean/HNTopVoted"&gt;chrome extension&lt;/a&gt; that colors in red the score of the top 5 most voted posts on &lt;a href="http://news.ycombinator.com"&gt;Hacker News&lt;/a&gt;. I got at least two things out of this small project. First, I learned how to develop chrome extensions. Second, I enjoyed the satisfaction of finishing something I started.&lt;/p&gt;
&lt;p&gt;I wanted to start contributing to open source projects. So I paired with Tom, one of the facilitators at RC, who introduced me to the &lt;a href="http://www.bpython-interpreter.org/"&gt;bpython&lt;/a&gt; project. Tom taught me how to get acquainted  to the bpython code base, or any large code base for that matter, by making the program print something on the screen. To do that we first had to identify the main file which is run when we launch bpython. We did that by using the unix command “which” followed by the name of the program “bpython” in this case. “Which” is a unix utility that shows the full path of shell commands. I'm still in the process of playing around with bpython hoping that I can start contributing to the project soon.&lt;/p&gt;
&lt;p&gt;At RC, every Friday there is an optional interview preparation session. During this week's session we worked on a command line phone book application. In my &lt;a href="https://github.com/joejean/phonebook"&gt;implementation&lt;/a&gt; I used python with sqlite. Other people used JavaScript, Go, Java etc.. ; a reminder of how diverse Recursers are. Tom helped me and gave me some great feedback on my implementation. &lt;/p&gt;
&lt;p&gt;Overall, my first week at RC was a good one. At the beginning I was a little nervous and I was not comfortable revealing my ignorances. But as I interact more with the facilitators and fellow Recursers I'm becoming more and more comfortable saying “I don't know” which is something that is strongly encouraged at RC. After all, every time I keep my ignorances secret, I miss an opportunity to learn something new and get better. Jake Scruggs summed it up well when he said:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Tomorrow I need to look stupider and feel better about it. This staying quiet and trying to guess what's going on isn't working so well."&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="programming"></category><category term="summer2015"></category><category term="recurse center"></category></entry><entry><title>Continuous Integration and Continuous Delivery make life easier</title><link href="https://www.joejean.net/articles/continuous-integration-and-continuous-delivery-make-my-life-easier/" rel="alternate"></link><published>2015-02-28T07:04:00+04:00</published><updated>2015-02-28T07:04:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2015-02-28:articles/continuous-integration-and-continuous-delivery-make-my-life-easier/</id><summary type="html">&lt;p&gt;I have been hearing the terms "continuous integration" and "continuous delivery" for quite some time. However, it wasn't until last week that I decided to not only learn more about them but also use them in my own projects.&lt;/p&gt;
&lt;p&gt;What is continuous integration? Continuous integration (CI) is a development practice where developers push code to a central repository several times a day. Every time code is pushed to the repository an automated build is run to verify that the new code did not cause any errors/bugs in the system. After the build is complete, the system will notify you whether it was successful —i.e. the system passes all the test cases— or not. CI helps avoid problems that might arise when integrating or merging code from different developers on a team or when one developer is integrating their code with existing code in the main repository.&lt;/p&gt;
&lt;p&gt;Continuous Delivery (CD), on the other end, automates the deployment of your new code to your production system as long as the build that ran during the integration step was successful. If the build is successful the CI/CD system will automatically pushes/deploys the code to production. If the build failed, the code won't be deployed to production.&lt;/p&gt;
&lt;p&gt;Such system makes my life, as a developer, so much easier since all I need to care about now is write code and push it to GitHub.&lt;/p&gt;
&lt;p&gt;So, I decided to set up a CI/CD for this blog. This was pretty easy using a platform called &lt;a href="https://circleci.com"&gt;CircleCi&lt;/a&gt;. They have a free plan which is just perfect for a small project like this blog.&lt;/p&gt;
&lt;p&gt;I also set up CI/CD for another project but this time I used a tool called Jenkins on a virtual private server (VPS) running Ubuntu. Jenkins is a popular open source CI tool. This option requires more configuration than the previous one, but it is worth trying as it gives you a better understanding of how CI/CD works. So, if you would like to give it a try, you may find &lt;a href="http://code.tutsplus.com/tutorials/setting-up-continuous-integration-continuous-deployment-with-jenkins--cms-21511"&gt;this tutorial&lt;/a&gt; helpful.&lt;/p&gt;
&lt;p&gt;Happy integrating/delivering!&lt;/p&gt;</summary><category term="python"></category><category term="programming"></category></entry><entry><title>[Mashups Class] My Final Project</title><link href="https://www.joejean.net/articles/my-final-project/" rel="alternate"></link><published>2014-12-13T23:00:00+04:00</published><updated>2014-12-13T23:00:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-12-13:articles/my-final-project/</id><summary type="html">&lt;p&gt;For my final project I decided to build something that I myself needed: a motivational quote API.
For quite some time I had been searching the web for a quotes API and I was not able to find anything interesting, so I built one.&lt;/p&gt;
&lt;p&gt;I did not have any quotes. So I scraped &lt;a href="http://www.inc.com/jeff-haden/top-350-inspiring-motivational-quotes-to-tweet-and-share.html"&gt;this webpage&lt;/a&gt; which contains a list of 150 inspirational quotes. Then I created a database with those quotes.&lt;/p&gt;
&lt;p&gt;Once I got the database running, I planned a nice API whose documentation can be found &lt;a href="http://pumpmeup.herokuapp.com/apidoc"&gt;here&lt;/a&gt;. The next step was to implement the API using ExpressJS. This was a pretty easy and straightforward step.&lt;/p&gt;
&lt;p&gt;After building and testing the API, I built a simple application on top of it. The application lets the user like quotes, add quotes to the database, retrieve the top 10 quotes, and search quotes that contain specific keywords. The application can be accessed &lt;a href="http://pumpmeup.herokuapp.com/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One thing I was planning to include in the project was a sentiment analysis library. I installed &lt;a href="https://www.npmjs.com/package/sentiment"&gt;this one&lt;/a&gt;. I wanted to analyze every new quote that a user would submit and only save it to the database if it is a positive one. However, while doing some testing the sentiment analyzer gives a 90% negative score to the following quote:"Success is walking from failure to failure with no loss of enthusiasm". As a human, we can see that this is obviously a positive quote, even though it contains two negative words. But the sentiment analyzer is not as smart as we are. That's when I decided to give up on that feature. But I plan to get back to it and figure out a way to make it work.&lt;/p&gt;
&lt;p&gt;All in all, this was a really fun project to hack and I look forward to improving it in the near future.&lt;/p&gt;</summary><category term="mashups"></category><category term="programming"></category><category term="javascript"></category><category term="api"></category></entry><entry><title>[Mashups Class] Ideas for Second Project</title><link href="https://www.joejean.net/articles/ideas-for-second-project/" rel="alternate"></link><published>2014-10-21T17:40:00+04:00</published><updated>2014-10-21T17:40:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-10-21:articles/ideas-for-second-project/</id><summary type="html">&lt;p&gt;For my second project for this class, I have two ideas. I would like to implement one during this week
and work on the other when I have more free time. Okay, without further ado here they are.&lt;/p&gt;
&lt;p&gt;The first idea is to create an interactive map that represents the countries where the NYUAD student body
hails from. To implement this idea, I would need a dataset of all the countries represented in the student body.
And there are two ways I can get this data. One way is to ask someone from the office of Residential Education and the other way is to use the Facebook Graph API in order to retrieve the hometown of all the NYUAD students who are members of a student's secret group on Facebook. Then I would use &lt;a href="https://opendata.socrata.com/dataset/Country-List-ISO-3166-Codes-Latitude-Longitude/mnkm-8ram"&gt;this open API&lt;/a&gt; to get the geographical coordinates of each country. And finally, I would use &lt;a href="http://d3js.org/"&gt;D3.js&lt;/a&gt; to build an interactive map visualization of the content.&lt;/p&gt;
&lt;p&gt;The second one is to use data from the World Bank in order to build a site that allows someone to compare two given countries. So, the user would enter two country names and I would request data for those countries from the World Bank API and display the data in the forms of graphs/visualizations. For example the user can easily see the number of students who go to school in a give country. Again, here I plain to use &lt;a href="http://d3js.org/"&gt;D3.js&lt;/a&gt; to build the visualizations.&lt;/p&gt;
&lt;p&gt;Over the weekend, I will decide which one of those two ideas that I'm going to implement first.&lt;/p&gt;</summary><category term="mashups"></category><category term="programming"></category><category term="javascript"></category><category term="api"></category></entry><entry><title>[Mashups Class] My Favorite Class Materials So Far</title><link href="https://www.joejean.net/articles/my-favorite-class-materials-so-far/" rel="alternate"></link><published>2014-10-19T23:00:00+04:00</published><updated>2014-10-19T23:00:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-10-19:articles/my-favorite-class-materials-so-far/</id><summary type="html">&lt;p&gt;I can't believe we are already in the middle of this great class, in fact one of my favorite so far.
Over the past weeks, we have used a lot of great tutorials/videos and articles as learning materials for the class.
All of them were really great. Below is a list of &lt;em&gt;some&lt;/em&gt; of my favorites in no particular order.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://infoactive.co/data-design/ch15"&gt;Importance of Color, Font, and Icons&lt;/a&gt;: This article provides great tips on how to use colors, font and icons when designing. My biggest takeaway is the human's mind takes longer to understand a text in Serif than it it takes to understand content displayed in Sans-Serif.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://alistapart.com/article/css-positioning-101"&gt;CSS Positioning 101&lt;/a&gt;: This article is just priceless. Thanks to it I was finally able to fully understand how to leverage the power of CSS's position property and its values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://eloquentjavascript.net"&gt;Eloquent JavaScript&lt;/a&gt;: This is one of the best JavaScript books I have read. I like to keep going back to it every time I need a refresher on some JavaScript topics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript"&gt;A re-introduction to JavaScript&lt;/a&gt;. This article by the Mozilla Developer Network is a great article that helped me understand some of the best JavaScript features in a clear and concise way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.amazon.com/Dont-Make-Think-Revisited-Usability/dp/0321965515/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1414005937&amp;amp;sr=1-1&amp;amp;keywords=Don%27t+Make+Me+Think"&gt;Don't Make Me Think, Revisited by Steve Krug&lt;/a&gt;: This is hands down the best book I have read on User Experience design.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.smashingmagazine.com/2014/05/29/mystery-jquery-object-syntax-basic-introduction/"&gt;The Mystery Of The jQuery Object: A Basic Introduction &lt;/a&gt;: Great introduction to the JQuery object, the famous $.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://learn.jquery.com/"&gt;JQuery Documentation&lt;/a&gt;: Great learning resource for JQuery.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Well, I could spend the entire day listing resources here. As I said, all of the resources we have used for the class are just awesome. In fact, if you are reading this and are not part of the class and you are eager to learn JavaScript web development, I strongly recommend you check out Professor Craig's repository for the class &lt;a href="https://github.com/craigprotzel/Mashups"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="mashups"></category><category term="programming"></category><category term="javascript"></category><category term="api"></category></entry><entry><title>[Mashups Class] First Project: San Francisco Graffiti Explorer</title><link href="https://www.joejean.net/articles/first-project-san-francisco-graffiti-explorer/" rel="alternate"></link><published>2014-10-01T16:01:00+04:00</published><updated>2014-10-01T16:01:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-10-01:articles/first-project-san-francisco-graffiti-explorer/</id><summary type="html">&lt;p&gt;For my first project for the Mashups class , I built a website --&lt;a href="http://joejean.github.io/SF_Graffiti/"&gt;available here&lt;/a&gt;-- that allows the user to explore graffiti spots in San Fransisco. In this article,
I'm going to provide some details on how I went about building the project.&lt;/p&gt;
&lt;p&gt;First of all, let me tell you some of the tools I used in this project. I used the
&lt;a href="https://data.sfgov.org/City-Infrastructure/Graffiti-30-Days/p6sg-7yp7"&gt;graffiti dataset from DataSF&lt;/a&gt;. This data set provides information--including geographic coordinates, status, and a photo when available-- about graffiti cases reported in the San Francisco area. I also used the &lt;a href="https://developers.google.com/maps/documentation/javascript/"&gt;Google Maps JavaScript API&lt;/a&gt;. And finally, I used &lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; for the UI.&lt;/p&gt;
&lt;p&gt;My intention was just to allow any graffiti lovers, no matter where they are in the world, to explore some of the graffiti spotted in the San Francisco area.&lt;/p&gt;
&lt;p&gt;Essentially, the site includes a Google map that occupies half of the page. On the
map, there are markers. Each one represents the location of a graffiti spot. If the graffiti hasn't been washed out--it has an "open" status in the dataset--it is represented on the map with a blue marker. A black marker represents a graffiti that has been cleaned.&lt;/p&gt;
&lt;p&gt;Since there are about a thousand graffiti in the dataset, when I load all of their respective markers on the map it looks pretty messy. Most markers would sit on top of one another. To fix this, I used a small library called &lt;a href="http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclusterer/docs/reference.html"&gt;MarkerClusterer.js&lt;/a&gt; which groups together all of the markers that are really close to each other. Then when the user clicks on the cluster, it displays all the markers that it contains.&lt;/p&gt;
&lt;p&gt;When the user clicks on a given marker, two things happen: 1) the Google street view of the location of that graffiti is loaded on the left 2) on the specific marker is loaded an info window which list the name of the street, the status of the graffiti and if available a link to a picture of the graffiti.&lt;/p&gt;
&lt;p&gt;The process I followed while building the site was simple.It was my first time working with the Google Maps API so I had to learn it. After learning the API, I thought about how I wanted the UI to look. Then I built the UI using mostly the Bootstrap framework with a some customization as well. After getting the UI  right, I wrote the JavaScript code. I used the functional style in my JavaScript code.&lt;/p&gt;
&lt;p&gt;Currently, the site works and it looks fine, but I do think it needs some improvements. I plan to add a feature where the user can filter the types of graffiti they want to see--open, closed, with or without pictures available. I also would like to rewrite the JavaScript code using an object oriented programming style.&lt;/p&gt;
&lt;p&gt;I will hopefully publish the second version soon.&lt;/p&gt;</summary><category term="mashups"></category><category term="programming"></category><category term="javascript"></category><category term="api"></category></entry><entry><title>[Mashups Class] How to set a default value for a function's parameter in Javascript &amp; first project idea</title><link href="https://www.joejean.net/articles/how-to-set-default-value-for-function-parameter-in-javascript/" rel="alternate"></link><published>2014-09-16T02:03:00+04:00</published><updated>2014-09-16T02:03:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-09-16:articles/how-to-set-default-value-for-function-parameter-in-javascript/</id><summary type="html">&lt;p&gt;This week  my homework has two parts. In the first part, I have to solve the three exercises found &lt;a href="http://eloquentjavascript.net/02_program_structure.html" target="_blank"&gt;at the end of chapter two&lt;/a&gt; in the book Eloquent Javascript. In the second part, I have to describe what I'm thinking about doing for my first single page app project, how the data flow might work, and what the experience of a user visiting the site would be like.&lt;/p&gt;
&lt;h3&gt;How to set a default value for function parameter in Javascript&lt;/h3&gt;
&lt;p&gt;The first exercise was to write a loop that makes seven calls to console.log to output the following triangle:&lt;/p&gt;
&lt;pre&gt;            #
            ##
            ###
            ####
            #####
            ######
            ####### &lt;/pre&gt;

&lt;p&gt;As my solution for this exercise, I decided to create a function&amp;mdash;&lt;code&gt;drawRightTriangle(height)&lt;/code&gt;&amp;mdash; that would take a parameter called &lt;code&gt;height&lt;/code&gt; which represents the height of the triangle. So, instead of seven calls to console.log, the program would make 3, 10, 12, etc. depending on the value provided by the user to the &lt;code&gt;height&lt;/code&gt; parameter. I also wanted to  give a default value to the parameter &lt;code&gt;height&lt;/code&gt; so that the user can alternatively call the function without passing any arguments, as in &lt;code&gt;drawRightTriangle()&lt;/code&gt;. Being a Python programmer, I quickly assumed
I could achieve this with a line as simple as &lt;code&gt;drawRightTriangle(height==8)&lt;/code&gt;, but it does not work like that in Javascript.
So, after a little bit of research, I found a &lt;a href="http://stackoverflow.com/questions/894860/set-a-default-parameter-value-for-a-javascript-function" target="_blank"&gt;Stackoverflow thread&lt;/a&gt; that shows how to do it using the "typeof" operator to test whether the paramter is &lt;code&gt;undefined&lt;/code&gt;. If it is, you assign it the default value, otherwise you just use it as it is, i.e , use the value provided by the user. The code is as follow: &lt;code&gt;height = typeof height !== 'undefined'? height: 7;&lt;/code&gt;. By the way, the &lt;code&gt;?&lt;/code&gt; is called the ternary operator&amp;mdash;&lt;code&gt;condition ? value_if_true : value_if_false&lt;/code&gt;. I could have achieved the same thing by using &lt;code&gt;if ... else&lt;/code&gt;. Here are the solutions for all three exercises:
&lt;pre&gt;
    &lt;code&gt;
      // Solutions to exercises from chapter 2 of Eloquent Javascript&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;1-&lt;/span&gt; &lt;span class="nt"&gt;Looping&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;triangle&lt;/span&gt;
    &lt;span class="nt"&gt;var&lt;/span&gt; &lt;span class="nt"&gt;drawRightTriangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;height&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;give&lt;/span&gt; &lt;span class="nb"&gt;height&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="nb"&gt;default&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;provide&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
        &lt;span class="nb"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;typeof&lt;/span&gt; &lt;span class="nb"&gt;height&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="nb"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;2-&lt;/span&gt; &lt;span class="nt"&gt;FizzBuzz&lt;/span&gt;
    &lt;span class="nt"&gt;var&lt;/span&gt; &lt;span class="nt"&gt;fizzBuzz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;lowerLimit&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;upperLimit&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;lowerLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;typeof&lt;/span&gt; &lt;span class="n"&gt;lowerLimit&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;lowerLimit&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;upperLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;typeof&lt;/span&gt; &lt;span class="n"&gt;upperLimit&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;upperLimit&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lowerLimit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;upperLimit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;: FizzBuzz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nt"&gt;else&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nt"&gt;3&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;: Fizz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;

          &lt;span class="nt"&gt;else&lt;/span&gt; &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nt"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;: Buzz&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;3&lt;/span&gt; &lt;span class="nt"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;Chess&lt;/span&gt;  &lt;span class="nt"&gt;Board&lt;/span&gt;
    &lt;span class="nt"&gt;var&lt;/span&gt; &lt;span class="nt"&gt;chessBoard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;size&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="nb"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;typeof&lt;/span&gt; &lt;span class="nb"&gt;size&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;size&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;else&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nt"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

              &lt;span class="n"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
              &lt;span class="n"&gt;else&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="err"&gt;}&lt;/span&gt;
            &lt;span class="nt"&gt;console&lt;/span&gt;&lt;span class="nc"&gt;.log&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;line&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="err"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/code&gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;You can run and test these functions by opening &lt;a href="/files/mashups/hmw_2.html" target="_blank"&gt; this file &lt;/a&gt;. Then, from that page open your browser's developer console&amp;mdash;ctrl+shift+k in Firefox&amp;mdash; and start playing around with the functions.&lt;/p&gt;
&lt;h3&gt;First project idea&lt;/h3&gt;
&lt;p&gt;For my first single page app, I don't really know what I want to do yet. At this point, all I know for sure now is I want to make something cool. One not-so-cool idea I have so far is to use the NY Times API and a text to speech API in order to allow a robot to read the news to the user. Not-so-cool, right? I know. I promise to come up with somehting cool. Please stay tuned.&lt;/p&gt;</summary><category term="mashups"></category><category term="programming"></category><category term="javascript"></category><category term="api"></category></entry><entry><title>[Mashups Class] Playing with an open API</title><link href="https://www.joejean.net/articles/playing-with-an-open-api/" rel="alternate"></link><published>2014-09-05T16:01:00+04:00</published><updated>2014-09-05T16:01:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-09-05:articles/playing-with-an-open-api/</id><summary type="html">&lt;p&gt;As part of my first homework for &lt;a href="https://github.com/craigprotzel/Mashups" target="_blank"&gt;Mashups: Creating with web API&lt;/a&gt;, I had to first find, post and describe an API that returns JSON data. &lt;/p&gt;
&lt;h3&gt;Initial Plan&lt;/h3&gt;
&lt;p&gt;After playing around with a couple of APIs, I decided to use the World Bank API. I like the fact that
one does not need a key to make requests to this API. And I also found the documentation
to be clear and useful.&lt;/p&gt;
&lt;p&gt;I use the following url &lt;code&gt;http://api.worldbank.org/incomeLevels/LIC/countries?format=json&lt;/code&gt;
in order to get a list of countries with income level classified as low income. As you can see four parameters are used
in the url. "incomeLevels" is used for information about all levels of income, "LIC" is an acronym that stands for
Low Level Income, and "countries" is the list of countries. By default, the World Bank API returns XML data. Since I wanted JSON, I had to explicitly specify that in the request url using &lt;code&gt;format=json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For the second part of the assignment, I created a small script that sends a request to the API with the url mentioned above
and display the data on a nicely formatted HTML page.  Even though my script was syntaxically correct, and the request to the server was successful &amp;mdash; this is confirmed by the debugging info showed in my broswer's developer/Javascript console &amp;mdash;I still could not retrieve any data returned by the API.&lt;/p&gt;
&lt;p&gt;After doing some research about the issue, I found out that  the problem was due to an &lt;a href="http://stackoverflow.com/questions/22186703/modifying-jquery-jsonp-callback-function"&gt;implementation issue with the World Bank API.&lt;/a&gt;  If you want to learn more about the problem click the  previous link.&lt;/p&gt;
&lt;h3&gt;Second Plan&lt;/h3&gt;
&lt;p&gt;So since the World Bank API was not doing the job, I did some more research and found another open&amp;mdash;authentication free&amp;mdash; API: The US government jobs API.
I use the following url &lt;code&gt;http://api.usa.gov/jobs/search.json?query=tech+jobs&lt;/code&gt;to request all open technology related positions offered by government agencies. And I got the data back, manipulated it and displayed it on an HTML page. The page can be accessed &lt;a href="/files/mashups/hmw_1.html" target="_blank"&gt; here. &lt;/a&gt; And here is the JS code that does the job:
&lt;pre&gt;&lt;code&gt;
$(document).ready(function(){&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;          $.ajax({

                url:&amp;quot;http://api.usa.gov/jobs/search.json?query=tech+jobs&amp;quot;,
                type: &amp;quot;GET&amp;quot;,
                dataType: &amp;quot;jsonp&amp;quot;,

                success: function(data){
                  $.each(data, function(index, job){
                    // Those are for debugging purpose
                    console.log(job.position_title);
                    console.log(job.url)
                    console.log(job.locations[0]);
                    console.log(job.organization_name);

                  // The following code will add the JSON content returned by the API to the DOM
                  var tr = $(&amp;#39;&amp;lt;tr/&amp;gt;&amp;#39;)
                    .appendTo($(&amp;#39;table&amp;#39;));
                  var td_1 = $(&amp;#39;&amp;lt;td/&amp;gt;&amp;#39;)
                      .appendTo(tr);
                  var td_2 = $(&amp;#39;&amp;lt;td/&amp;gt;&amp;#39;)
                      .appendTo(tr);
                  var aaa = $(&amp;#39;&amp;lt;a/&amp;gt;&amp;#39;)
                    .attr(&amp;#39;href&amp;#39;,job.url)
                    .attr(&amp;#39;target&amp;#39;,&amp;#39;_blank&amp;#39;)
                    .addClass(&amp;#39;job_title&amp;#39;)
                    .text(job.position_title)
                    .append(&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;)
                    .appendTo(td_1);
                  var employer = $(&amp;#39;&amp;lt;span/&amp;gt;&amp;#39;)
                      .addClass(&amp;#39;employer&amp;#39;)
                      .text(job.organization_name)
                      .appendTo(td_1);
                  var span_state= $(&amp;#39;&amp;lt;span/&amp;gt;&amp;#39;)
                      .addClass(&amp;#39;state&amp;#39;)
                      .text(job.locations[0])
                      .appendTo(td_2);
                  });
                },

                 error: function() {
                    return console.log(&amp;quot;Failed&amp;quot;);
                    }
            });
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;});
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;</summary><category term="mashups"></category><category term="programming"></category><category term="javascript"></category><category term="api"></category></entry><entry><title>How to run Python 2 and Python 3 together on Windows 7</title><link href="https://www.joejean.net/articles/how-to-run-python-2-and-python-3-together-on-windows-7/" rel="alternate"></link><published>2014-08-31T11:38:00+04:00</published><updated>2014-08-31T11:38:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-08-31:articles/how-to-run-python-2-and-python-3-together-on-windows-7/</id><summary type="html">&lt;p&gt;I have always wanted to have both Python 2 and Python 3 installed and running on my Windows 7 computer, but I feared that installation was going to be a nightmare. However, today I put my fear aside and dove right into the task.&lt;/p&gt;
&lt;p&gt;At least two scenarios are possible. While my experience was with the first scenario, the second one is also possible. So here is how to approach each one:&lt;/p&gt;
&lt;h3&gt;Scenario 1: Python 2, virtualenv and virtualenvwrapper are already installed&lt;/h3&gt;
&lt;p&gt;My Windows 7 laptop already had Python 2, virtualenv and virtualenvwrapper installed&amp;mdash;so, I downloaded and installed
&lt;a target="_blank" href="https://www.python.org/downloads/"&gt; Python 3 &lt;/a&gt;. By default, any virtual environment I create would use Python 2. In order to make them also use Python 3, I would create them with the following command: &lt;code&gt;mkvirtualenv myenv -p c:\python3.4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;But then, within that virtual environment, if I wanted to use Python 3, I would still have to call it explicitly using the command: &lt;code&gt;py -3&lt;/code&gt; otherwise it would still default to Python 2. I found this observation weird and  I decided to do a little experiment. I activated one of the virtual environments that were created without pointing to Python 3. Then, in the terminal I type: &lt;code&gt;py -3&lt;/code&gt; and, bam, it worked. Therefore, I came to the conclusion that installing Python 3 on my windows was enough for me to still use it in my virtual environments whenever I want to. I don't have to explicitly point my virtual environments to Python 3 with the &lt;code&gt;-p&lt;/code&gt; flag.&lt;/p&gt;
&lt;h3&gt;Scenario 2: Python is not installed&lt;/h3&gt;
&lt;p&gt;If Python is not already installed on your computer, you should install Python 3. And at the beginning of your Python files you would just add &lt;code&gt;#!python2&lt;/code&gt; or &lt;code&gt;#!python3&lt;/code&gt; depending on whether you want to use version 2 or version 3 of Python. Then, in order to run any of your Python programs, you would type: &lt;code&gt;py pythonfile.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now, that I have both versions on my computer, I'm going to start exploring some of the interesting features of Python 3 while still keeping my Python code running.&lt;/p&gt;</summary><category term="python"></category><category term="programming"></category></entry><entry><title>My method for finding the best books on any topic.</title><link href="https://www.joejean.net/articles/my-method-for-finding-the-best-books-on-any-topic/" rel="alternate"></link><published>2014-06-20T12:07:00+04:00</published><updated>2014-06-20T12:07:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-06-20:articles/my-method-for-finding-the-best-books-on-any-topic/</id><summary type="html">&lt;p&gt;I recently read an article about the importance of Computational Thinking. It is important because it helps you think about ways you can use computers 
to solve problems -- something that the knowledge of a programming language's syntax does not necessarily provide. So, I decided to read a good book about 
the subject. But first, I had to find the book. In what follows, I will explain how  I went about finding a great Computational Thinking book using Amazon and 
users' feedback. You will be able to apply those same techniques to find books on any other subjects that interest you.&lt;/p&gt;
&lt;p&gt;Since we are living in the era of internet and e-commerce, we can buy almost anything online. Moreover, people also give feedback about what they buy online. 
These feedbacks can be useful for future potential buyers. One of the most popular online retailers where people shop and write product reviews is Amazon. 
They sell different variety of products from books to groceries and garden items. So to find my book I head over to Amazon.com.&lt;br /&gt;
In the search bar, I change the department from "All" to "Books", type the name of the topic- in this case "Computational Thinking"-- and hit enter or 
click "Go". A result page will show.&lt;/p&gt;
&lt;p&gt;&lt;img src ="https://www.joejean.net/images/bestbook1.JPG" class="img-responsive" /&gt;&lt;/p&gt;
&lt;p&gt;Now that you have the search results from Amazon, all you need to do is go through the list and pick the books that both match your search query and have good 
reviews. Depending on the popularity of the subject matter, sometimes you will find books with a great number of reviews but at other times -like in this case - you will find books with just a few reviews or no reviews at all.
Normally, my choice of a book is based on the average number of positive reviews it has. Therefore, I would be less inclined to buy a book that does not have 
any reviews or that has an average review of less than 3 stars. But I have also discovered that it is important to actually read some of the reviews, especially 
the negative ones. What happens sometimes is that someone will write a negative review not because the content of the book was of poor quality but because the 
paper was or because the shipping took too long. Thus, I would not take into account such reviews in my buying decision. I'm more interested in the quality of 
the information provided in the book. &lt;/p&gt;
&lt;p&gt;So, in our case, what should I do? Well, this is going to be a tough call because unfortunately it seems like the literature on this particular subject is quite
limited. Amazon has provided of course many results but only a few are directly related to "Computational Thinking".  After scanning the search results, 
I realized that the best match is the first book called: "Computational Thinking for the Modern Problem Solver" by David Riley. &lt;img src ="https://www.joejean.net/images/bestbook2.JPG" class="img-responsive" /&gt; 
Sadly, this book has no reviews yet. That does not mean the book is not great but I just do not feel confident in buying it without seeing what others who have
bought it have to say about it. My next best alternative is the book titled "Computational Logic and Human Thinking" by Kowalski. &lt;img src ="https://www.joejean.net/images/bestbook3.JPG" class="img-responsive" /&gt; Although it is more about 
"Computational Logic" than "Computational Thinking", it has 3 positive reviews which provide me with more confidence in the quality of the materials presented. So, I bought this book. &lt;/p&gt;
&lt;p&gt;As you can see, in this particular case it was not easy for me to find a great book. However, this is due to the fact that there are not many books on this 
particular subject matter yet. But, I'm pretty sure that by using the simple techniques presented in this article you will have more luck finding some of the 
best books on a given subject matter that you want to study. &lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</summary><category term="books"></category><category term="reading"></category><category term="information"></category></entry><entry><title>5 Tips for writing more concise and elegant code in Python</title><link href="https://www.joejean.net/articles/5-tips-for-writing-more-concise-elegant-python/" rel="alternate"></link><published>2014-03-06T09:07:00+04:00</published><updated>2014-03-06T09:07:00+04:00</updated><author><name>Joe Jean</name></author><id>tag:www.joejean.net,2014-03-06:articles/5-tips-for-writing-more-concise-elegant-python/</id><summary type="html">&lt;p&gt;Last week, I was reviewing some of the first lines of code I wrote when I was learning python three years ago. While they worked, I now realise that
there are many things I could have done in a more elegant and concise way. Of course, when learning a new programming language one is always 
encouraged to build things from scratch, to write one's own functions, classes or methods to do things even when such code might already exists. 
&lt;/p&gt;
&lt;p&gt;This approach is definitely useful for a beginner. However, once one understands the basics, it is a good idea to start using code and techniques already 
provided --at least by the programming language itself. This will not only help you build things faster but also -- in most cases -- make your code more concise and readable. 
The following are five tips that you can start using today to make your python code more concise and elegant. &lt;/p&gt;
&lt;h3&gt;1) Prefer the return statement to evaluate your expression and return its result for you&lt;/h3&gt;
&lt;p&gt;Sometimes you have a function that returns the result of an expression. Let's say it's a boolean expression, so the return value can be either 
true or false. One usually uses a  variable to store the result of the expression and then return that variable, such as this:
&lt;pre&gt;&lt;code&gt;
def isEven(a):
    if (a % 2)==0:
        result = True
    else:
        result = False
    return result
&lt;/code&gt;&lt;/pre&gt;
However, a more elegant way to reach the same result is to put the entire expression in the return statement and it will compute and return the result of the
expression as follow:
&lt;pre&gt;&lt;code&gt;
def isEven(a):
    return (a % 2)==0
&lt;/code&gt;&lt;/pre&gt;
This is possible because the return statement actually returns the result of evaluating an expression. And in case you are wondering, in python numbers eveluate to themselves.&lt;/p&gt;
&lt;h3&gt;2) Prefer Python's builtin &lt;code&gt;format()&lt;/code&gt; function to format your strings&lt;/h3&gt;
&lt;p&gt;Imagine you have an object called "Player" which has attributes such has name and age. Now imagine that you have
a function called printPlayerInfo() that prints the player's information. One would usually uses the plus sign (+) to concatenate the string literals with
the string variables, such as this:
&lt;pre&gt;&lt;code&gt;
def printPlayerInfo(Player):
    return "The player's name is "+Player.name+" and the player is "+str(Player.age)+" years old"
&lt;/code&gt;&lt;/pre&gt; &lt;br /&gt;
However, a more elegant way to do this is to use python's builtin format() function. Thus our function becomes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
def printPlayerInfo(Player):
    return "The player Name is {Player.name} and the player is {Player.age} years old".format(Player=Player)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, in addittion to making your code more readable, the format function spares the programmer the extra burden of casting all numbers to strings.   &lt;/p&gt;
&lt;h3&gt;3) Prefer a tuple instead of a temporary variable when swaping the values of two variables&lt;/h3&gt;
&lt;p&gt;When one wants to swap the values of two variables, they usually use a third variable as a temporary storage for one of the two values. Let's imagine that 
we want to swap the values of the variables &lt;code&gt;currentScore&lt;/code&gt; and &lt;code&gt;prevScore&lt;/code&gt;, one usually proceed as follow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
currentScore = 34
prevScore = 23
temp = currentScore
currentScore = prevScore
prevScore = temp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, this can be done more elegantly using a python tuple:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
currentScore = 34
prevScore = 23
(currentScore, prevScore) = (prevScore, currentScore)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;4) Prefer list comprehension to create a new list out of an existing one&lt;/h3&gt;
&lt;p&gt;Imagine that you have a list of numbers,&lt;code&gt;firstList&lt;/code&gt; and you want to create a second list,&lt;code&gt;secondList&lt;/code&gt;  with all the even numbers - we assume there are some- contained 
in &lt;code&gt;firstList&lt;/code&gt;. Usually one would proceed as follow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
firstList = [2283, 4, 567, 236, 4458]
secondList = []

for val in firstList:
    if val % 2 == 0:
        secondList.append(val)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, a more elegant and pythonic way to do the same thing is to use list comprehension notation as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
firstList = [2283, 4, 567, 236, 4458]
secondList = [ val for val in list1 if val%2 == 0]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Well, some people might argue that the first method is more comprehensible than the second one. I would say that such a view is influenced by their knowledge of 
other programming languages. Furthermore, list comprehension is a python specific feature which is created to make code more beautiful and concise. &lt;/p&gt;
&lt;h3&gt;5) Prefer the list's &lt;code&gt;count()&lt;/code&gt; method to count the number of times an item appears on the list:&lt;/h3&gt;
&lt;p&gt;Imagine that you have a list that has a couple of names for example. And, let's say you want to count the number of times a certain name appears on the list.
Usually one would proceed as follow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
nameList = ["aaa", "bbb", "aaa", "ccc", "ddd"]
count =0
for name in nameList:
    if name == "aaa":
        count += 1

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, to achieve the same result you can simply use python's builtin list &lt;code&gt;count()&lt;/code&gt; method as follow:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 
nameList = ["aaa", "bbb", "aaa", "ccc", "ddd"]
count = nameList.count("aaa")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The python list data type has more of those useful builtin methods that can not only make your life easier but aslo make your code more readable and concise. 
You can find them in the &lt;a href = "http://docs.python.org/2/tutorial/datastructures.html#more-on-lists" target="_blank"&gt; python documentation.&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</summary><category term="python"></category><category term="programming"></category></entry></feed>